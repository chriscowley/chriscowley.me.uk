<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Just Another Linux Blog]]></title>
  <link href="http://www.chriscowley.me.uk/atom.xml" rel="self"/>
  <link href="http://www.chriscowley.me.uk/"/>
  <updated>2013-01-21T16:14:20+01:00</updated>
  <id>http://www.chriscowley.me.uk/</id>
  <author>
    <name><![CDATA[Chris Cowley]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Trac with Nginx on Centos]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2013/01/21/trac-with-nginx-on-centos/"/>
    <updated>2013-01-21T11:53:00+01:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2013/01/21/trac-with-nginx-on-centos</id>
    <content type="html"><![CDATA[<p><a href="tac.edgewall.org">Trac</a> is an excellent online project management tool. Nginx us a great web server. Surely the combination of the two should be a match made in heaven. I would say so, although there are a couple problems. The easiest way to deploy Trac is on Apache using mod_wsgi or FastCGI. This option does not really exist for Nginx. Okay, it can do FastCGI, but I have not get that set up on my server.</p>

<!-- more -->


<p>What Nginx does do extremely well is Proxy stuff. Use this with Trac&#8217;s built in web server (tracd) and you have  a very nice little set up. Ruby people, before you get all upset, Trac&#8217;s server is not just for dev (a la WEBrick). It is fine for production use.</p>

<p>The first thing to do (obviously) is to install Trac. I get it from Pip, although a slightly older version is in <a href="http://fedoraproject.org/wiki/EPEL">EPEL</a> if you prefer to stick with native packages.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum install python-setuptools
</span><span class='line'>sudo pip install Trac
</span><span class='line'>sudo useradd -r -d /var/local/trac trac
</span><span class='line'>sudo -u trac trac-admin /var/local/trac/trac.example.com initenv
</span><span class='line'>sudo -u trac htpasswd -c /var/local/trac/.htpasswd example-realm chris</span></code></pre></td></tr></table></div></figure>


<p>Answer the little question it asks you - this includes the VCS you want to use, but that is for another day. I use the TracGit plugin to link to my Git repos.</p>

<p>Create an init script (<code>/etc/init.d/trac</code>) that contains something like:</p>

<div><script src='https://gist.github.com/4586539.js?file='></script>
<noscript><pre><code>#!/bin/sh
### BEGIN INIT INFO
# Provides:          trac
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      S 0 1 6
# Short-Description: trac initscript
# Description:       trac
### END INIT INFO

# Original author: Chris Cowley

# Do NOT &quot;set -e&quot;

DAEMON=/usr/bin/tracd
SCRIPT_NAME=/etc/rc.d/trac
CONFIG_PATH=/etc/trac
PIDFILE=&quot;/tmp/trac.3050&quot;
USER=&quot;trac&quot;
TRACHOME=&quot;/var/local/trac&quot;
REALM=&quot;example-realm&quot;

# Exit if the package is not installed
[ -x &quot;$DAEMON&quot; ] || exit 0

case &quot;$1&quot; in
  start)
        echo &quot;starting trac&quot;
        su - $USER -c &quot;$DAEMON -d --basic-auth=*,$TRACHOME/.htpasswd,$REALM -e $TRACHOME -p 3050 --protocol=http --pidfile=$PIDFILE&quot;
        ;;
  stop)
        echo &quot;stoping trac&quot;
        kill `cat $PIDFILE`
        ;;
  restart)
        echo &quot;stoping trac&quot;
        kill `cat $PIDFILE`
        echo &quot;starting trac&quot;
        su - $USER -c &quot;$DAEMON -d --basic-auth=*,$TRACHOME/.htpasswd,$REALM -e $TRACHOME -p 3050 --protocol=http --pidfile=$PIDFILE&quot;
        ;;
  *)
        echo &quot;Usage: $SCRIPT_NAME {start|stop|restart}&quot; &gt;&amp;2
        exit 3
        ;;
esac

</code></pre></noscript></div>


<p>Start up the Trac daemon and enable it on boot up</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo chmod +x /etc/init.d/trac
</span><span class='line'>sudo chkconfig trac on
</span><span class='line'>sudo /etc/init.d/trac start</span></code></pre></td></tr></table></div></figure>


<p>Open it up and have a look at least. You will probably want to modify it to use your authentication realm.</p>

<p>Now you need to configure Nginx. I use the package from <a href="http://fedoraproject.org/wiki/EPEL">EPEL</a>. Enable that if you have not already and run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum install nginx</span></code></pre></td></tr></table></div></figure>


<p>Create the file <code>/etc/nginx/conf.d/trac.conf</code> containing something like:</p>

<div><script src='https://gist.github.com/4586630.js?file='></script>
<noscript><pre><code>upstream trac.example.com {
    server  127.0.0.1:3050;
}
server {
    listen          80;
    server_name     trac.example.com;

    access_log      /var/log/nginx/trac.access.log;
    error_log       /var/log/nginx/trac.error_log;

    location / {
        proxy_pass      http://trac.example.com;
        proxy_set_header  X-Real-IP  $remote_addr;
    }
}</code></pre></noscript></div>


<p>Finally enable Nginx on boot up and start it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo chkconfig nginx on
</span><span class='line'>sudo server nginx start</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What will HP do next?]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/12/17/what-will-hp-do-next/"/>
    <updated>2012-12-17T15:16:00+01:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/12/17/what-will-hp-do-next</id>
    <content type="html"><![CDATA[<p>HP recently announced a new range of 3Par based arrays that are aimed at mid-range enterprise. There now appear to be 2 ranges for the future:</p>

<!--more -->


<ul>
<li>HP StoreServ 10000 is the big boy, scales up to 1.6PB, 192 FC ports, 32 10Gb iSCSI - the works.</li>
<li>HP StoreServ 7000 is the mid-range one, with <em>only</em> 24 FC and 8 1-Gb iSCSI. This split into the 7200 (2U) and 7400 (4U)</li>
</ul>


<p>With the entry level <a href="http://www8.hp.com/us/en/hp-news/press-release.html?id=1332554#.UM8Mm3eTW01">7200 starting at $20k</a> that does not leave a lot of room at the low end for both the P4000 and the P2000 ranges. At the higher end the 7400 starts at $32k, which certainly leaves no space for the venerable EVA.</p>

<p>In <a href="http://h30507.www3.hp.com/t5/Around-the-Storage-Block-Blog/Blogger-Q-amp-A-with-David-Scott/ba-p/128097">an interview with Around the Storage Block</a> HP Storage GM David Scott is quite critical of EMC who have a range of different and fairly unrelated product lines (Atmos, VMAX, VNX/VNXe, Isilion). For now HP is fairly similar: P9000 (Hitachi), P4000 (Lefthand, P2000 (Dot Hill). When you look at where they have priced the 3Par gear, it does appear that they are betting the farm on it.</p>

<p>Something I have been quite vocal about over the last 5 years or so is that fact that HP&#8217;s storage portfolio is all over the place. Compared to Netapp, who have a very homogenous portfolio (everything runs OnTAP, you know one Netapp product, you can jump on to the rest), HP have got a one interface for P2000, another for P4000, another for EVA. Nothing sits together. HP needs to get all this in line. EMC have already started with Unisphere, but they still have multiple product architectures (VMAX, VNX, Isilion for example).</p>

<p>I personally think that these other ranges will drop by the wayside, although I am reading a bit between the lines here. Dot Hill do seem to be setting themselves up to be more than just an OEM supplier to HP. Maybe it is wishful thinking as I am a <a href="http://www.chriscowley.me.uk/blog/2010/01/12/some-great-new-san-gear/">huge fan of Dot Hill</a>, but they have some very interesting products. I hope/expect to see a lot more of Dot Hill themselves over the next few years, rather than just being behind Oracle/Netapp/HP badges.</p>

<p>The P9000 range is a similar story at the other end of the market. The Storserve 10k seems to be very similar, pretty much the same capacity and number of ports. Feature set is also close enough. I also have the impression that Hitachi are starting to push a bit harder in their own right as well.</p>

<p>Essentially I think 3Par will become HP&#8217;s own architecture. It has the flexibity to  cover everything from a single bay with 12 SATA disks at the low end (perhaps on DL hardware) all the way up to PB+ scales, taking in all-flash on the way.</p>

<p>This leaves the P4000, which has been re-branded the <a href="http://www8.hp.com/us/en/products/disk-storage/product-detail.html?oid=4118659">StoreVirtual 4000</a>. This seems to me to be a no-brainer. It is already running on commodity DL180 hardware and includes an appliance option. My guess is the physical implementation of this will be phased out. It will become the Virtual Appliance front-end to all this new 3Par based physical goodness.</p>

<p>Finally, I have skipped over the EVA. What does the future hold in store for HP&#8217;s venerable high-end platform. I think nothing. It will go into maintenance mode and be quietly end-of-life&#8217;d. Existing customers will be pushed to <a href="http://h30507.www3.hp.com/t5/Around-the-Storage-Block-Blog/EVA-to-HP-3PAR-StoreServ-online-import/ba-p/128391">migrate</a> over to Storeserv 7000.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EMC ExtremIO Thoughts]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/12/10/emc-extremio-thoughts/"/>
    <updated>2012-12-10T16:39:00+01:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/12/10/emc-extremio-thoughts</id>
    <content type="html"><![CDATA[<p>There has been quite a bit of musing recently on the web about EMC and what will come out of their ExtremIO acquisition. They have recently (finally) started demonstrating an all-flash array. The name says it all: ExtremIO. It is for super high IOPS applications - Virtual desktops, enormous DBs, that sort of thing.</p>

<!-- more -->


<p>It is a bit of a depature from traditional EMC, in that it <a href="http://storagenewsletter.com/news/systems/all-ssd-system-from-emc-xtremio-">appears</a> that it is going to be a true scale-out architecture. This is has more in common with Isilion (not developed at EMC) than VMAX (developed at EMC).</p>

<p>The problem is that EMC are <em>extremely</em> late to the market this time around. VMAX was ahead of the curve by adding flash. In the all flash arena there are several options already there, <a href="http://violin-memory.com">Violin</a>, <a href="http://whiptail.com/">Whiptail</a> spring straight to mind.</p>

<p>Over at <a href="http://blog.thestoragearchitect.com/2012/12/10/xtremio-aka-project-x-wheres-the-innovation/">The Storage Architect</a> Chris Evans gives the standard counter-arguments to EMC&#8217;s marketing spin. Namely:</p>

<ol>
<li>Other vendor solutions aren&#8217;t as resilient</li>
<li>It&#8217;s a 1.0 product, expect more from 2.0 and beyond</li>
<li>It gives our customers choice</li>
</ol>


<p>I hate to say it, but EMC have one HUGE advantage over all the startups. Quite simply they are EMC! As experts we know that Violin (for example) have a more mature product than EMC do.</p>

<p><span class='pullquote-right' data-pullquote='When the guy with the credit card sees the name &#8220;EMC&#8221; it will be hard to persuade him that such a mature brand has the more immature product'>
When the guy with the credit card sees the name &#8220;EMC&#8221; it will be hard to persuade him that such a mature brand has the more immature product. This won&#8217;t be the case everywhere, but in a lot of large enterprise they would go to their storage experts (like me) and ask for advice on which flash array to go for; they then stipulate that it has to come from EMC&#8217;s portfolio. At which point I through my hands up in despair, tell the to buy ExtremIO, the guy who has the better, more mature, solution loses the business that was rightfully theirs.
</span></p>

<p>It is not a 1.0 product, I can not accept that EMC acquired ExtremIO based on stuff that was only on paper. At best this is a 1.5 product, but realistically it is a 2.0 product. From a company with the resources of EMC, this should be coming out of the blocks running - it should be the best in class. OK, ExtremIO were further from version 1.0 than EMC were maybe lead to believe at the time, but they have got a lot of resources. After a year, they should not be in damage control mode.</p>

<p>Does it really give the customers choice? I would go one step further than what Chris has said - that an all-flash VMAX or VNX would have made sense. I agree with him, but I also think that they have actually removed choice.</p>

<p>I would say that EMC have cocked-up here. They under-estimated the market for all-flash arrays. Even my <a href="http://www.violin-memory.com/news/press-releases/nats-selects-violin-memory-flash-storage-for-virtual-desktop-infrastructure/">old employer have got some</a> and that is in Air Traffic control - there is no-one else who relies more on &#8220;tried and tested&#8221; technology than them. They then rushed to through some money at the problem, but like of Violin were already happy where they were.</p>

<p><span class='pullquote-right' data-pullquote='I wish that EMC would be punished for this'>
Robin Harris at <a href="http://storagemojo.com/2012/12/05/emcs-xtreme-embarrassment/">StorageMojo</a> thinks this will be a costly mistake for EMC. I disagree, I think by announcing that this is coming EMC will stall the market and thus come out of this fine. Unfortunately there is too much latency in the enterprise storage space for it to be otherwise. I wish it were a bit more dynamic and I wish that EMC would be punished for this, thus rewarding one of the underdogs. That does not happen enough in the enterprise space, especially for an Englishman like me (we do love the underdogs).
</span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SFTP Chroot on CentOS]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/11/19/sftp-chroot-on-centos/"/>
    <updated>2012-11-19T19:59:00+01:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/11/19/sftp-chroot-on-centos</id>
    <content type="html"><![CDATA[<p>This came up today where I needed to give secure file transfer to customers. To complicate things I had to use an out-of-the-box RHEL6 system. The obvious answer was to use SSH and limit those users to SFTP only. Locking them into a chroot was not a requirement, but it seemed like a good idea to me. I found plenty of docs that got 80% of the way, or took a shortcut, but this should be complete.</p>

<!-- more -->


<p>The basic steps are:</p>

<ol>
<li>Create a group and the users to that group</li>
<li>Modify the SSH daemon configuration to limit a group to sftp only</li>
<li>Setup file system permissions</li>
<li>Configure SELinux</li>
<li>Test (of course)</li>
</ol>


<p>Without further ado, lets get started. It should only take about 10 minutes, nothing here is especially complex.</p>

<p>Create a group that is limited to SFTP only and a user to be in that group.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>groupadd sftponly
</span><span class='line'>useradd sftptest
</span><span class='line'>usermod -aG sftponly  sftptest</span></code></pre></td></tr></table></div></figure>


<p>Now you need to make a little change to <code>/etc/ssh/sshd_config</code>. There will be a <em>Subsystem</em> line for <code>sftp</code> which you need to change to read:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Subsystem       sftp    internal-sftp</span></code></pre></td></tr></table></div></figure>


<p>Now you need to create a block at the end to limit members of a group (ie the sftponly group you created above) and chroot them. Simply add the following to the end of the file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Match Group sftponly
</span><span class='line'>    ChrootDirectory %h
</span><span class='line'>    ForceCommand internal-sftp
</span><span class='line'>    X11Forwarding no
</span><span class='line'>    AllowTcpForwarding no</span></code></pre></td></tr></table></div></figure>


<p>These changes will require a reload of the SSH daemon: <code>service sshd reload</code></p>

<p>Now you need to make some file permission changes. For some reason which I cannot work out for now, the home directory must be owned by root and have the permissions 755. So we will also need to make a folder in the home directory to upload to and make that owned by the user.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo -u sftptest mkdir -pv /home/sftptest/upload
</span><span class='line'>chown root. /home/sftptest
</span><span class='line'>chmod 755 /home/sftptest
</span><span class='line'>chgrp -R sftponly /home/sftptest</span></code></pre></td></tr></table></div></figure>


<p>The last thing we need to do is tell SELinux that we want to upload files via SFTP to a chroot as it is read-only by default. Of course you are running SELinux in enforcing mode aren&#8217;t you :)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setsebool -P ssh_chroot_rw_homedirs on</span></code></pre></td></tr></table></div></figure>


<p>Now from another console you can sftp to your server</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sftp sftptest@&lt;server&gt;</span></code></pre></td></tr></table></div></figure>


<p>You should then be able to put a file in your upload folder. However if you try to ssh to the server as the user <em>sftptest</em> it should tell you to go away. Of course you should be able to <em>ssh</em> as your normal user with no problem. Pro tip: make sure to leave a root terminal open just in case.</p>

<p>Required reading:</p>

<ul>
<li><a href="http://wiki.centos.org/HowTos/SELinux">CentOS Wiki SELinux</a></li>
<li><a href="http://wiki.centos.org/TipsAndTricks/SelinuxBooleans">CentOS Wiki SELinuxBooleans</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Adito/OpenVPN-ALS on CentOS]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/10/26/installing-adito-slash-openvpn-als-on-centos/"/>
    <updated>2012-10-26T21:19:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/10/26/installing-adito-slash-openvpn-als-on-centos</id>
    <content type="html"><![CDATA[<p><a href="http://sourceforge.net/projects/openvpn-als">OpenVPN-ALS</a>, formerly known as Adito, is not to be confused with <a href="http://www.openvpn.net">OpenVPN</a>. They both brilliant tools that work in completely different things, but in a similar way. Confused? Excellent&#8230;</p>

<!-- more -->


<p>OpenVPN-ALS (from now on known as Adito, because I find it less confusing) is a browser based SSL VPN that enables you to acess resources on your own network, even if you are behind a restrictive proxy and/or firewall.</p>

<p>First you need a basic install of CentOS. The absolute base system is plenty. One thing to note is that to get the best from this it cannot share space with another web server as it takes up port 443. Make sure Apache/Nginx et al are not installed.</p>

<p>The next step is to install a couple of essentials. OpenVPN-ALS is a java applications, so obviously you need a JRE (in fact you need a JDK), plus it uses Ant for building. The Adito project work purely in branches, to the trunk should be stable.</p>

<p>First get <a href="www.oracle.com">Oracle Java</a> and install it. You can use the instructions <a href="http://www.if-not-true-then-false.com/2010/install-sun-oracle-java-jdk-jre-6-on-fedora-centos-red-hat-rhel/">here</a> to help you. You will need to configure <code>javac</code> and <code>jar</code> as well.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum install subversion ant </span></code></pre></td></tr></table></div></figure>


<p>Just to be sure run <code>sudo update-alternatives -config java</code> to make sure you are using the latest one:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[chris@adito ~]$ sudo update-alternatives --config java
</span><span class='line'>
</span><span class='line'>There is 3 program that provides 'java'.
</span><span class='line'>
</span><span class='line'>  Selection    Command
</span><span class='line'>-----------------------------------------------
</span><span class='line'> + 1           /usr/lib/jvm/jre-1.5.0-gcj/bin/java
</span><span class='line'>   2           /usr/lib/jvm/jre-1.6.0-openjdk.x86_64/bin/java
</span><span class='line'>*  3           /usr/java/jdk1.7.0_07/jre/bin/java
</span><span class='line'>
</span><span class='line'>Enter to keep the current selection[+], or type selection number: 3  </span></code></pre></td></tr></table></div></figure>


<p>Now check out the current trunk:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo svn co https://openvpn-als.svn.sourceforge.net/svnroot/openvpn-als/adito/trunk /opt/openvpn-als</span></code></pre></td></tr></table></div></figure>


<p>Adito needs the tools.jar file that is bundles with the JDK, so copy that into place. You can then go ahead and build.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo cp /usr/java/jdk1.7.0_07/lib/tools.jar /opt/openvpn-als/adito/lib/
</span><span class='line'>cd /opt/openvpn-als
</span><span class='line'>sudo ant install</span></code></pre></td></tr></table></div></figure>


<p>This will generate a lot of output, but will eventually print something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> [java] Starting installation wizard........................Point your browser to http://adito.chriscowley.local:28080. 
</span><span class='line'> [java] 
</span><span class='line'> [java] Press CTRL+C or use the 'Shutdown' option from the web interface to leave the installation wizard.</span></code></pre></td></tr></table></div></figure>


<p>Go to the address it gives you and work your way through the wizard. At the end it will exit and tell you to restart the service.</p>

<p>You can return to your console and run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo ant install-agent
</span><span class='line'>sudo ant install-service
</span><span class='line'>sudo /etc/init.d/adito start
</span><span class='line'>sudo chkconfig adito on</span></code></pre></td></tr></table></div></figure>




<iframe class="imgur-album" width="100%" height="550" frameborder="0" src="http://imgur.com/a/yIVhT/embed"></iframe>


<p>You can now log into it, but it will not do much as there are no applications installed. You need to check them out of Subversion, compile and upload them. You can do this on your local machine.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svn co https://openvpn-als.svn.sourceforge.net/svnroot/openvpn-als/adito-applications/
</span><span class='line'>cd adito-aplications</span></code></pre></td></tr></table></div></figure>


<p>There are quite a few there, but we will just do the portable Putty application.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd adito-application-putty-portable-ssh
</span><span class='line'>ant</span></code></pre></td></tr></table></div></figure>


<p>The output will tell you the Zip file it has built which you can now upload. Go to the &#8220;Extension Manger&#8221; from the menu on the left. On the right you wil see &#8220;Upload Extension&#8221;. Choose the Zip file and you can configure it to connect to whatever Linux machine you want. &#8220;Putty SSH&#8221; will now be available in the list of installed applications.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Cycling Related Review]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/10/23/a-cycling-related-review/"/>
    <updated>2012-10-23T20:31:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/10/23/a-cycling-related-review</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://www.arkon.com/images/slimgrip/sm532.jpg" width="300" height="300"> A little bit if a move away from computers and related subjects today. I was recently contacted by <a href="http://www.gearzap.com">Gearzap</a>/<a href="http://www.mobilefun.co.uk">MobileFun</a> who had seen that I had a Raspberry Pi. They asked if I would like to review a case and I cheekily asked if they could also give me something to mount my phone on the handlebars of my bike. Much to my pleasant surprise, they said yes.</p>

<!-- more -->


<p>The sent me the <a href="http://www.arkon.com/slimgrip/slimgrip-bike-mount.html">Arkon SM532</a>. Unsurprisingly it is made in China, but then what is not nowadays. Having said that, the build quality is pretty good and the instructions pretty clear.</p>

<p>I mounted it on my beloved <a href="http://flic.kr/p/cDCcFd">Felt</a> road bike as it is what I am currently using day to day. This unfortunately highlighted the only real problem I found. Modern road bikes have thicker handle bars than many other types of bike. This meant that fitting the bracket to them was tight. It comes with several rubber shims, that a) protect you handlebars, b) stop it from slipping around. It was not possible to use those. It has to be said that is pretty ugly as well, but if that worries you then buy a Garmin.</p>

<p>Anyway, I persevered and attached it without the shims and prayed that it would not do any damage. As I said, the instructions were very clear and this only took a few minutes.  Once on it all seemed perfectly secure, so the next day I put my phone in it. The clips keep it in place pretty well and the you also have the bungie cord as an extra, so I was not worried it would fall out at all. The route I took is a collection of French farm lanes. Some are very smooth, but some are horrible. Also, it is harvest time, so there is plenty of dried mud on the road to give it a bit more of a shaking. It held up very well, nothing shifted at all and I could easily angle the phone so it was just right.</p>

<p>Later I took it off to ensure that it would fit properly on a &#8220;normal&#8221; sized handlebar by putting it on my mountain bike - it was fine. Also, there was absolutely no scratches on my Felt&#8217;s bars at all, despite my concerns about not having any shims to protect them.</p>

<p>All in all it is a pretty good piece of kit. It can be had from <a href="http://www.mobilefun.co.uk">MobileFun</a> for £13.95, which strikes me as pretty good value.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My new job]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/10/01/my-new-job/"/>
    <updated>2012-10-01T22:16:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/10/01/my-new-job</id>
    <content type="html"><![CDATA[<p>I have now got new challenges and am designing much bigger systems. Whereas before I would have take one of these:
<img class="center" src="http://www.chriscowley.me.uk/images/p2000-g3-sff.png" width="250" height="400"></p>

<!-- more -->


<p>Plugged it into a pair of these:
<img class="center" src="http://www.chriscowley.me.uk/images/silkworm.jpg" width="250" height="450">
And finally plugged in a pair of these:
<img class="center" src="http://www.chriscowley.me.uk/images/dl380g7.jpg" width="200" height="400"></p>

<p>Now I do not actually do the plugging in - that is not part of the documented process. Also, the system I am designing is on the other side of the world. However I now take one of <a href="http://uk.emc.com/storage/symmetrix-vmax/vmax-20k.htm" target="_blank">these</a>, a couple of <a href="http://www.cisco.com/en/US/products/hw/ps4159/ps4358/ps5395/index.html" target="_blank">these</a> and add a couple of racks of <a href="http://www.cisco.com/en/US/products/ps10265/index.html" target="_blank">these</a>. Finally it all plugs into a couple of <a href="http://www.cisco.com/en/US/products/ps10098/index.html" target="_blank">these</a>.</p>

<p>True I am not as hand-ons as I would like to be (for now). However, I am getting exposed to a the real big boys kit with systems that are used by 100k+ users, as opposed to 100 users. The challenge is very real, but exciting. As we quite often said at Snell:</p>

<p>&#8220;Challenge accepted&#8230;&#8221;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My new life]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/10/01/my-new-life/"/>
    <updated>2012-10-01T22:06:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/10/01/my-new-life</id>
    <content type="html"><![CDATA[<p>I am now a month in to life in France. Make no mistake I am so far very happy that we have made the right decision, even though not everything is perfect. The biggest beef is without a doubt the paperwork!</p>

<!-- more -->


<p>For example, it took us a month to get a phone line and the stumbling block was not having the right piece of paper. To get onto the system you have to have a bill, but to get a bill you need a bill. Call it a catch-22 or a chicken-egg take your pick, but french beaurocrats love that.</p>

<p>Working in France is a little different to England. Add to that the fact that I am going from a <a href="http://www.snellgroup.com" target="_blank">small company</a> to working on a project for a <b>much</b> <a href="http://www.orange-business.com" target="_blank">larger one</a> and you have quite a culture shock.</p>

<p><span class='pullquote-right' data-pullquote='All my colleagues take a 2 hour lunch'>
The attitude to lunch is probably the biggest single change of all that can only be attributed to country. All my colleagues take a 2 hour lunch religiously, during which they go elsewhere. I am used to taking a 30 minute break to read the Register with a sandwhich/salad at my desk. For now, past an hour, I get bored an return to work. Maybe I will extend my lunch as I get used to it, but maybe not - shorter lunch means I get to go home earlier.
</span></p>

<h2>Commuting</h2>

<p>My commute is quite a lot further than when I was at Snell:</p>

<iframe width="500" height="300" scrolling="no" frameborder="no" src="https://www.google.com/fusiontables/embedviz?viz=MAP&amp;q=select+col2+from+1J0AXs2Oyzs-J9ChL5U7hgKWkHX-HimQZ699VSO4&amp;h=false&amp;lat=50.820603567709554&amp;lng=-1.011776909545925&amp;z=13&amp;t=1&amp;l=col2"></iframe>


<p>That was quite a nice route once you got to Langston harbour. What I do now is very different. For a start I have not cycled all the way yet. Partly because it it a lot further, but also because trains are a <em>lot</em> cheaper here. I pay 80 euros for a month, half of which gets re-imbursed. When your train costs less than 2 euros a day, it does not even make sense to take a car.</p>

<p>The actual cycling is a lot more pleasant as well. I live in a hamlet, and my route take me past the <em>le lac tranquille</em> (the calm lake). In the morning it gets very cold and misty, which is very nice.</p>

<p><a href="http://imgur.com/Trejw"><img src="http://i.imgur.com/Trejw.jpg" title="Hosted by imgur.com" alt="" /></a></p>

<p>Drivers are about the same. The vast majority give me plenty of space, but obviously you get the odd idiot. Just today someone shouted &#8220;Je vais te touer&#8221; so some things are pretty universal it would appear.</p>

<p>I have also found that the paint on the roads (at least in Rennes) is more slippery in the wet. The simple answer has been to avoid the cycle lanes - no real change there then.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I have a Raspberry Pi]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/08/04/i-have-a-raspberry-pi/"/>
    <updated>2012-08-04T21:47:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/08/04/i-have-a-raspberry-pi</id>
    <content type="html"><![CDATA[<p>Just got my new toy! I have to admit that I am not completely certain what I will do with it yet though.</p>

<!-- more -->


<p>It will certainly start by running <a href="http://mpd.wikia.com/wiki/Music_Player_Daemon_Wiki" target="_blank">Music Player Daemon</a>.</p>

<p><a href="http://www.flickr.com/photos/chriscowleyunix/7705281518/" title="Raspberry Pi by chriscowleysound, on Flickr"><img src="http://farm9.staticflickr.com/8023/7705281518_73c2ee8c18.jpg" width="500" height="375" alt="Raspberry Pi"></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Isle of Wight Ride]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/07/27/isle-of-wight-ride/"/>
    <updated>2012-07-27T16:02:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/07/27/isle-of-wight-ride</id>
    <content type="html"><![CDATA[<p>Last week I successfully did my first 65 mile ride. Of course it was not a race, but that never stopped a group of men being over competitive - I won by the way.</p>

<!-- more -->


<p>I do not own a cycle computer, nor did I remember to run My Tracks. However, a colleague did record it on his Garmin GPS:</p>

<iframe width='465' height='548' frameborder='0' src='http://connect.garmin.com:80/activity/embed/203587506'></iframe>




<object width="400" height="300"> <param name="flashvars" value="offsite=true&lang=en-us&page_show_url=%2Fphotos%2F83132329%40N04%2Fsets%2F72157630749918206%2Fshow%2F&page_show_back_url=%2Fphotos%2F83132329%40N04%2Fsets%2F72157630749918206%2F&set_id=72157630749918206&jump_to="></param> <param name="movie" value="http://www.flickr.com/apps/slideshow/show.swf?v=109615"></param> <param name="allowFullScreen" value="true"></param><embed type="application/x-shockwave-flash" src="http://www.flickr.com/apps/slideshow/show.swf?v=109615" allowFullScreen="true" flashvars="offsite=true&lang=en-us&page_show_url=%2Fphotos%2F83132329%40N04%2Fsets%2F72157630749918206%2Fshow%2F&page_show_back_url=%2Fphotos%2F83132329%40N04%2Fsets%2F72157630749918206%2F&set_id=72157630749918206&jump_to=" width="400" height="300"></embed></object>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mirror a Subversion repo with svnsync]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/07/17/mirror-a-subversion-repo-with-svnsync/"/>
    <updated>2012-07-17T12:03:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/07/17/mirror-a-subversion-repo-with-svnsync</id>
    <content type="html"><![CDATA[<p>The basic idea is that everytime a change happens on the master, it gets pushed to the slave. In this set up it will <em>not</em> get you any more capacity; you cannot commit back to the slave. If you do it will get out of sync, resulting in a <em>split brain</em> situation. This is what we sysadmins call a &#8220;bad thing&#8221;. I am doing this in order to have <a href="http://www.atlassian.com/software/fisheye/overview" target="_blank">Atlassian Fisheye</a> can scan the repository without having to go over the network. The basic layout is:</p>

<!-- more -->


<p><img class="center" src="http://www.chriscowley.me.uk/images/svnsync.png"></p>

<p>First the master needs to be able to send the data to the slave without any user interaction. On both the slave create a user to perform the sync:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>useradd svnsync</span></code></pre></td></tr></table></div></figure>


<p>On the master, I use https to access my repositories. This means that all my hook scripts run as the apache user. Change to that user with <code>sudo su -s /bin/bash - apache</code></p>

<p>Create an ssh key-pair (<code>ssh-keygen</code>) and add the contents of <code>~apache\.ssh\id_rsa.pub</code> on the master to <code>~svnsync/.ssh/authorized_keys2</code> on the slave.</p>

<p>Now you can push push data to the slave without a password. Test it by running:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh svnsync@&lt;slave&gt;</span></code></pre></td></tr></table></div></figure>


<h2>On Slave</h2>

<p>Create a new repository to store what gets pushed to it</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svnadmin create --fs-type=fsfs /var/local/svnsync/&lt;reponame&gt;
</span><span class='line'>chown -Rv svnsync:svnsync /var/local/svnsync/&lt;reponame&gt;</span></code></pre></td></tr></table></div></figure>


<p>The process will need to make modifications to the properties, so you need to enable that. Put the following into <code>/var/local/svnsync/&lt;reponame&gt;/hooks/pre-revprop-change</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>USER="$3"
</span><span class='line'>
</span><span class='line'>if [ "$USER" = "svnsync" ]; then exit 0; fi
</span><span class='line'>
</span><span class='line'>echo "Only the svnsync user can change revprops" &gt;&2
</span><span class='line'>exit 1</span></code></pre></td></tr></table></div></figure>


<p>Finally make it executable with</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod +x /var/local/svnsync/&lt;reponame&gt;/hooks/pre-revprop-change</span></code></pre></td></tr></table></div></figure>


<h2>On Master</h2>

<p>First initialize the transfer and do the initial population. Do all this as the apache user again.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svnsync init --username svnsync \
</span><span class='line'>    svn+ssh://svnsync@&lt;slave&gt;/var/local/svnsync/&lt;reponame&gt; \
</span><span class='line'>    file:///var/svn/&lt;reponame&gt;</span></code></pre></td></tr></table></div></figure>


<p>Now we need to configure the Master repo to push all changes to the slave. Create a post-commit hook script containing</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>svnsync --username svnsync --non-interactive sync \
</span><span class='line'>    svn+ssh://svnsync@&lt;slave&gt;/var/local/svnsync/&lt;reponame&gt;</span></code></pre></td></tr></table></div></figure>


<p>Finally create another hook script to keep revision properties in sync in <code>/var/svn/&lt;reponame&gt;/hooks/post-revprop-change</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>REPOS="$1"
</span><span class='line'>REV="$2"
</span><span class='line'>USER="$3"
</span><span class='line'>PROPNAME="$4"
</span><span class='line'>ACTION="$5"
</span><span class='line'>
</span><span class='line'>svnsync --username svnsync --non-interactive copy-revprops \
</span><span class='line'>    svn+ssh://svnsync@&lt;slave&gt;/var/local/svnsync/&lt;reponame&gt; $REV && \
</span><span class='line'>    exit 0</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixed my gihub repo list]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/07/03/fixed-my-gihub-repo-list/"/>
    <updated>2012-07-03T20:54:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/07/03/fixed-my-gihub-repo-list</id>
    <content type="html"><![CDATA[<p>My Github repo list has not worked as all since I moved over to Octopress. This evening I though I would have a little look into it.</p>

<!-- more -->


<p>It turned out that GitHub has <a href="https://github.com/blog/1160-github-api-v2-end-of-life" target="_blank">depreciated the version 1 and 2 APIs</a>. Octopress was using version 2, so I have made a little change.</p>

<div><script src='https://gist.github.com/3042647.js?file='></script>
<noscript><pre><code>diff --git a/source/javascripts/github.js b/source/javascripts/github.js
index 678775a..8b79dad 100644
--- a/source/javascripts/github.js
+++ b/source/javascripts/github.js
@@ -10,15 +10,15 @@ var github = (function(){
   return {
     showRepos: function(options){
       $.ajax({
-          url: &quot;http://github.com/api/v2/json/repos/show/&quot;+options.user+&quot;?callback=?&quot;
+          url: &quot;https://api.github.com/users/&quot;+options.user+&quot;/repos?callback=?&quot;
         , type: 'jsonp'
         , error: function (err) { $(options.target + ' li.loading').addClass('error').text(&quot;Error loading feed&quot;); }
         , success: function(data) {
           var repos = [];
-          if (!data || !data.repositories) { return; }
-          for (var i = 0; i &lt; data.repositories.length; i++) {
-            if (options.skip_forks &amp;&amp; data.repositories[i].fork) { continue; }
-            repos.push(data.repositories[i]);
+          if (!data || !data.data) { return; }
+          for (var i = 0; i &lt; data.data.length; i++) {
+            if (options.skip_forks &amp;&amp; data.data[i].fork) { continue; }
+            repos.push(data.data[i]);
           }
           repos.sort(function(a, b) {
             var aDate = new Date(a.pushed_at).valueOf(),</code></pre></noscript></div>


<p>According to <a href="https://github.com/imathis/octopress/issues/620" target="_blank">this issue</a> there will be a fix in <a href="https://github.com/imathis/octopress/tree/2.1" target="_blank" >Octopress 2.1</a>. However, this patch will keep things working until Brandon Mathis moves it into the master branch. Of course that issue also highlighted the fact that I had just re-invented the wheel :(</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Excellent seminar given by a friend of mine]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/07/03/excellent-seminar-given-by-a-friend-of-mine/"/>
    <updated>2012-07-03T15:01:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/07/03/excellent-seminar-given-by-a-friend-of-mine</id>
    <content type="html"><![CDATA[<p>My friend <a target="_blank" href="http://twitter.com/#!/bobscape">Rob Borley</a> was talking at this year&#8217;s <a href="http://iwmw.ukoln.ac.uk/" target="_blank">International Web Management Workshow</a>. He actually got voted &#8220;best talk&#8221; - which was nice.</p>

<!-- more -->


<p>Anyone who even touches on Web vs mobile development should really watch it. His comes out with some very good idea.</p>

<iframe src="http://player.vimeo.com/video/44618744?title=0&amp;byline=0&amp;portrait=0&amp;color=ff9933" width="400" height="300" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing PostgreSQL on Fedora 17]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/06/23/installing-postgresql-on-fedora-17/"/>
    <updated>2012-06-23T13:02:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/06/23/installing-postgresql-on-fedora-17</id>
    <content type="html"><![CDATA[<p>With the new systemd this now requires a couple of manual steps.</p>

<p>Obviously we start by installing the RPMS themselves:</p>

<!-- more -->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum install postgresql-server postgresql</span></code></pre></td></tr></table></div></figure>


<p>If you were to now try and start the server it would fail as there is no database. The old SysV init script had an <em>initdb</em> option, but this no longer exists in the systemd service script. This means that you need to initialise the database manually:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo -u postrgres initdb -D /var/lib/pgsql/</span></code></pre></td></tr></table></div></figure>


<p>You can now start the service and enable it permanently</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo service postgresql start
</span><span class='line'>sudo chkconfig postgresql on</span></code></pre></td></tr></table></div></figure>


<p>Now you can enter the database as the postgres <em>superuser</em>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo -u postgres psql -d postgres</span></code></pre></td></tr></table></div></figure>


<p>Finally create your user and associated database</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CREATE ROLE "testAdmin" LOGIN PASSWORD 'testAdmin';
</span><span class='line'>CREATE DATABASE "testDB" WITH ENCODING='UTF8' OWNER="testAdmin";
</span><span class='line'>\q</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Skype video on Fedora 64bit]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/04/18/skype-video-on-fedora-64bit/"/>
    <updated>2012-04-18T15:53:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/04/18/skype-video-on-fedora-64bit</id>
    <content type="html"><![CDATA[<p>Install Skype – I used <a href="http://slayachronicles.blogspot.co.uk/2012/03/installing-skype-on-fedora-16-64-bit.html" target="_blank" >these</a> instructions. This will seem to get everything working, but video will just give you a black screen and no error message. This is because Skype is 32 bit and you webcam driver is 64 bit. Make sure you have libv4l.i686 installed.</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum install libv4l.i686</span></code></pre></td></tr></table></div></figure>


<p>Now create a wrapper script to launch it with a custom environment. I put it in <em>/usr/local/bin/skype</em></p>

<figure class='code'><figcaption><span> (skype)</span> <a href='http://www.chriscowley.me.uk/downloads/code/skype'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nv">LD_PRELOAD</span><span class="o">=</span>/usr/lib/libv4l/v4l1compat.so  /usr/bin/skype
</span></code></pre></td></tr></table></div></figure>


<p>This will now get loaded before the main Skype executable and you will have a working video device.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Learning Experience]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/04/16/a-learning-experience/"/>
    <updated>2012-04-16T20:30:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/04/16/a-learning-experience</id>
    <content type="html"><![CDATA[<p>How many times have you installed/updated a bit of software and read the line “Please take a back up” or something to that effect? 99 times out of a hundred, you will just continue and ignore it.</p>

<!-- more -->


<p>Today I had a reminder of why it is import to do so. I did a routine plug-in upgrade on our Jira installation (Customware Salesforce connector for those who want to know). I have done this several times, I had tested it in our Dev installation I was 100% confident it would work as expected. However, I actually decided to take a backup anyway.</p>

<p>I ran the upgrade in the production environment and re-indexed. Nothing out of the ordinary. 10% of the way into the index it fell over. Jira’s database was gone! Fortunately I was able to restore from my backup and at worst a comment or two was lost, but that still caused significant downtime.</p>

<p>I had done everything I could to make sure the upgrade would go smoothly, but it still did not. That is why software vendors always tell you to take a backup before even the smallest change – DO IT!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PyCurl and self-signed SSL certificates]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/04/05/pycurl-and-self-signed-ssl-certificates/"/>
    <updated>2012-04-05T16:50:00+02:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/04/05/pycurl-and-self-signed-ssl-certificates</id>
    <content type="html"><![CDATA[<p>At <a href="http://www.snellgroup.com" target="_blank">Snell</a> we make heavy use of self-signed certificates for internal websites, such as the R&amp;D wiki. Active Directory makes it easy for us to make this transparent to the users, those that use Firefox/Chrome can find our well-published instructions to add the CA certificate to their own browsers.</p>

<!-- more -->


<p>Today I was writing a script to that pulls lots of attachments off our Confluence wiki, which we access through SSL using one of those certificates. Of course PyCurl  moaned that it could not verify the host, but I did not care – I know it is the right host!</p>

<p>Finding documentation both on SSL and PyCurl is problematic at best. OpenSSL’s documentation it complete, but could not be more unreadable if written by a right-handed doctor using a broken crayon with his left-hand; pyCurl’s documentation is non-existent.</p>

<p>After an hour of Google-Fu and DuckDuckGo-Fu I finally managed to do what I wanted:</p>

<figure class='code'><figcaption><span> (pycurl_ssl.py)</span> <a href='http://www.chriscowley.me.uk/downloads/code/pycurl_ssl.py'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="n">downloadedFile</span> <span class="o">=</span> <span class="s">&quot;/tmp/stuff&quot;</span>
</span><span class='line'><span class="n">outfile</span> <span class="o">=</span> <span class="nb">file</span><span class="p">(</span><span class="n">downloadedFile</span><span class="p">,</span> <span class="s">&#39;wb&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">someurl</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">com</span>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="n">pycurl</span><span class="o">.</span><span class="n">Curl</span><span class="p">()</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="n">setopt</span><span class="p">(</span><span class="n">c</span><span class="o">.</span><span class="n">URL</span><span class="p">,</span> <span class="n">url</span><span class="p">)</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="n">setopt</span><span class="p">(</span><span class="n">pycurl</span><span class="o">.</span><span class="n">USERPWD</span><span class="p">,</span> <span class="s">&quot;</span><span class="si">%s</span><span class="s">:</span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">username</span><span class="p">,</span> <span class="n">password</span><span class="p">))</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="n">setopt</span><span class="p">(</span><span class="n">c</span><span class="o">.</span><span class="n">WRITEFUNCTION</span><span class="p">,</span> <span class="n">outfile</span><span class="o">.</span><span class="n">write</span><span class="p">)</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="n">setopt</span><span class="p">(</span><span class="n">c</span><span class="o">.</span><span class="n">SSL_VERIFYPEER</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="c"># That is you key line for this purpose!</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="n">perform</span><span class="p">()</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>


<p>There you go!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add SAN functions to Highly Available NFS/NAS]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/03/20/add-san-functions-to-highly-available-nfs-slash-nas/"/>
    <updated>2012-03-20T21:07:00+01:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/03/20/add-san-functions-to-highly-available-nfs-slash-nas</id>
    <content type="html"><![CDATA[<p>This based on my last post where I documented building a Highly Available NFS/NAS server.</p>

<p>There is not a huge amount that needs to be done in order to add iSCSI functionality as well.</p>

<!-- more -->


<p>Add a file called <em>/etc/drbd/iscsi.res</em> containing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>resource iscsi {
</span><span class='line'>    on nfs1 {
</span><span class='line'>        device /dev/drbd1;
</span><span class='line'>        disk   /dev/vdc;
</span><span class='line'>        meta-disk internal;
</span><span class='line'>        address   10.0.0.1:7789;
</span><span class='line'>    }
</span><span class='line'>    on nfs2 {
</span><span class='line'>        device /dev/drbd1;
</span><span class='line'>        disk   /dev/vdc;
</span><span class='line'>        meta-disk internal;
</span><span class='line'>        address   10.0.0.2:7789;
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>This differs from the previous resource in 2 ways. Obviously it using a different physical disk. Also the port number of the address is incremented; each resource has to have its own port to communicate on.</p>

<h2>Configure Heartbeat</h2>

<p>Add a new resource to <em>/etc/ha.d/haresources</em>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iscsi1.snellwilcox.local IPaddr::10.0.0.101/24/eth0 drbddisk::iscsi tgtd</span></code></pre></td></tr></table></div></figure>


<p>Same primary host, new IP address, new drbd resource and of course the service to be controlled (tgtd in this case).</p>

<p>I also made a couple of changes to <em>/etc/ha.d/ha.cf</em>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>keepalive 500ms
</span><span class='line'>deadtime 5
</span><span class='line'>warntime 10
</span><span class='line'>initdead 120</span></code></pre></td></tr></table></div></figure>


<p>This changes the regularity of the heartbeat packets from every 2 seconds to 2 every second. We also say that a node is dead after only 5 seconds rather than after 30.</p>

<h2>Configure an iSCSI Target</h2>

<p>Tgtd has a config file that you can use in <em>/etc/tgt/targets.conf</em>. It is an XML file, so add entry like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;target iqn.2011-07.world.server:target0&gt;
</span><span class='line'>        # provided devicce as a iSCSI target
</span><span class='line'>        backing-store /dev/vg_matthew/lv_iscsi1
</span><span class='line'>        # iSCSI Initiator's IP address you allow to connect
</span><span class='line'>        initiator-address 192.168.1.20
</span><span class='line'>        # authentication info ( set anyone you like for "username", "password" )
</span><span class='line'>&lt;/target&gt;</span></code></pre></td></tr></table></div></figure>


<p>The target name is by convention <em>iqn.year-month.reverse-domainname:hostname.targetname</em>. Each backing store will be a seperate LUN. A discussion of this is out of the scope of this article.</p>

<p>By default, this config file is disabled. Enable it by un-commenting the line <code>#TGTD_CONFIG=/etc/tgt/targets.conf</code> in <em>/etc/sysconfig/tgtd</em>. You can now enable the target with service tgtd reload.</p>

<p>Now when you run <code>tgtadm –mode target –op show</code> you should get something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Target 1: iqn.2012-03.com.example:iscsi.target1
</span><span class='line'>    System information:
</span><span class='line'>        Driver: iscsi
</span><span class='line'>        State: ready
</span><span class='line'>    I_T nexus information:
</span><span class='line'>    LUN information:
</span><span class='line'>        LUN: 0
</span><span class='line'>            Type: controller
</span><span class='line'>            SCSI ID: IET     00010000
</span><span class='line'>            SCSI SN: beaf10
</span><span class='line'>            Size: 0 MB, Block size: 1
</span><span class='line'>            Online: Yes
</span><span class='line'>            Removable media: No
</span><span class='line'>            Readonly: No
</span><span class='line'>            Backing store type: null
</span><span class='line'>            Backing store path: None
</span><span class='line'>            Backing store flags:
</span><span class='line'>        LUN: 1
</span><span class='line'>            Type: disk
</span><span class='line'>            SCSI ID: IET     00010001
</span><span class='line'>            SCSI SN: beaf11
</span><span class='line'>            Size: 8590 MB, Block size: 512
</span><span class='line'>            Online: Yes
</span><span class='line'>            Removable media: No
</span><span class='line'>            Readonly: No
</span><span class='line'>            Backing store type: rdwr
</span><span class='line'>            Backing store path: /dev/drbd/by-res/iscsi
</span><span class='line'>            Backing store flags:
</span><span class='line'>    Account information:
</span><span class='line'>    ACL information:
</span><span class='line'>        ALL</span></code></pre></td></tr></table></div></figure>


<h2>Connect An Initiator</h2>

<p>Install the iscsi utils:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install iscsi-initiator-utils
</span><span class='line'>chkconfig iscsi on
</span><span class='line'>chkconfig iscsid on</span></code></pre></td></tr></table></div></figure>


<p>Discover the targets on the host and login to the target.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iscsiadm -m discovery -t sendtargets -p 10.0.0.101
</span><span class='line'>iscsiadm -m node --login</span></code></pre></td></tr></table></div></figure>


<p>If you run <code>cat /proc/partitions</code> you will see an new partition has appeared. You can do whatever you want with it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Highly Available NFS/NAS]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/03/19/highly-available-nfs-slash-nas/"/>
    <updated>2012-03-19T16:59:00+01:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/03/19/highly-available-nfs-slash-nas</id>
    <content type="html"><![CDATA[<p>Take 2 Centos Servers (nfs1 and nfs2 will do nicely) and install ELrepo and EPEL on them both:</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install \
</span><span class='line'>    http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-5.noarch.rpm \
</span><span class='line'>    http://elrepo.org/elrepo-release-6-4.el6.elrepo.noarch.rpm --nogpgcheck</span></code></pre></td></tr></table></div></figure>


<p>Each of them should ideally have 2 NICS, with the secondary ones just used for DRBD sync purposes. We’ll give these the address 10.0.0.1/32 and 10.0.0.2/32.</p>

<p>I am also assuming that you have disabled the firewall and SELinux – I do not recommend that for production, but for testing it is fine.</p>

<h2>DRBD Configuration</h2>

<p>Install DRBD 8.4 on the both:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install drbd84-utils kmod-drbd84</span></code></pre></td></tr></table></div></figure>


<p>On each node the file /etc/drbd.d/global_common.conf should contain:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>global {
</span><span class='line'>  usage-count yes;
</span><span class='line'>}
</span><span class='line'>common {
</span><span class='line'>  net {
</span><span class='line'>    protocol C;
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>and /etc/drbd.d/main.res should contain:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>resource main {
</span><span class='line'>  on nfs1 {
</span><span class='line'>    device    /dev/drbd0;
</span><span class='line'>    disk      /dev/sdb;
</span><span class='line'>    address   10.0.0.1:7788;
</span><span class='line'>    meta-disk internal;
</span><span class='line'>  }
</span><span class='line'>  on nfs2 {
</span><span class='line'>    device    /dev/drbd0;
</span><span class='line'>    disk      /dev/sdb;
</span><span class='line'>    address   10.0.0.2:7788;
</span><span class='line'>    meta-disk internal;
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>On both nodes you will need to create the resource metadata:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>drbdadm create-md main</span></code></pre></td></tr></table></div></figure>


<p>and start the daemons</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service drbd start
</span><span class='line'>chkconfig drbd on</span></code></pre></td></tr></table></div></figure>


<p>Now <code>service drbd status</code> will give you:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>drbd driver loaded OK; device status:
</span><span class='line'>version: 8.4.1 (api:1/proto:86-100)
</span><span class='line'>GIT-hash: 91b4c048c1a0e06777b5f65d312b38d47abaea80 build by dag@Build64R6, 2011-12-21 06:08:50
</span><span class='line'>m:res   cs         ro                   ds                         p  mounted  fstype
</span><span class='line'>0:main  Connected  Secondary/Secondary  Inconsistent/Inconsistent  C</span></code></pre></td></tr></table></div></figure>


<p>Both devices or secondary and inconsistent, this is normal at this stage. Choose a node to be your primary and run:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>drbdadm primary --force main</span></code></pre></td></tr></table></div></figure>


<p>And it start sync’ing, which will take a long time. You can temporarily make it faster with (on one node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>drbdadm disk-options --resync-rate=110M main</span></code></pre></td></tr></table></div></figure>


<p>Put it back again with drbdadm adjust main</p>

<p>On your primary node you can now create a fiiesystem. I’m using ext4 for no good reason other than it being the default. Use whatever you are most comfortable with.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkfs.ext4 /dev/drbd0</span></code></pre></td></tr></table></div></figure>


<h2>Configure NFS</h2>

<p>If you diid a minimal Centos install, then you willl need to install the nfs-utils package (yum install nfs-utils). Prepare your mount points and exports on both servers:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir /drbd
</span><span class='line'>echo "/drbd/main *(rw)" >> /etc/exports</span></code></pre></td></tr></table></div></figure>


<p>Now we do the actual NFS set up. We previously choose nfs1 as our master when you used it to trigger the initial sync. On nfs1 mount the replicated volumes, move the NFS data to it, then create symlinks to our replicated data.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mount /dev/drbd0 /drbd
</span><span class='line'>mkdir /drbd/main
</span><span class='line'>mv /var/lib/nfs/ /drbd/
</span><span class='line'>ln -s /drbd/nfs/ /var/lib/nfs
</span><span class='line'>umount /drbd</span></code></pre></td></tr></table></div></figure>


<p>If you get errors about not bring able to remove directories in /var/lib/nfs do not worry.</p>

<p>Now a little preparation on nfs2:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mv /var/lib/nfs /var/lib/nfs.bak
</span><span class='line'>ln -s /drbd/nfs/ /var/lib/nfs</span></code></pre></td></tr></table></div></figure>


<p>This will create a broken symbolic link, but it will be fixed when everything fails over.</p>

<h2>Heartbeat Configuration</h2>

<p>Heartbeat is in the EPEL repository, so enable that and install it on both nodes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum -y install heartbeat</span></code></pre></td></tr></table></div></figure>


<p>Make sure that <em>/etc/ha.d/ha.cf</em> contains:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>keepalive 2
</span><span class='line'>deadtime 30
</span><span class='line'>bcast eth0
</span><span class='line'>node nfs1 nfs2</span></code></pre></td></tr></table></div></figure>


<p>The values in node should be whatever <code>uname -n</code> returns.</p>

<p>Now create <em>/etc/ha.d/haresources</em>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nfs1 IPaddr::10.0.0.100/24/eth0 drbddisk::main Filesystem::/dev/drbd0::/drbd::ext4 nfslock nfs</span></code></pre></td></tr></table></div></figure>


<p>That is a little cryptic, so I’ll explain; nfs1 is the primary node, IPaddr sets up a floating address on eth0 that our clients will connect to. This has a resource drbddisk::main bound to it, which sets our main to resource to primary on nfs1. Filesystem mounts /dev/drbd0 at /drbd on nfs1. Finally the the services nfslock and nfs are started on nfs1.</p>

<p>Finally, it needs an authentication file in /etc/ha.d/authkeys, which should be chmod’ed to 600 to be only readable by root.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>auth 3
</span><span class='line'>3 md5 mypassword123</span></code></pre></td></tr></table></div></figure>


<p>You should also make sure that nfslock and nfs do not start up by themselves:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chkconfig nfs off
</span><span class='line'>chkconfig nfslock off</span></code></pre></td></tr></table></div></figure>


<p>Now you can start heartbeat and check it is working:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service heartbeat start
</span><span class='line'>chkconfig heartbeat on</span></code></pre></td></tr></table></div></figure>


<h2>Testing</h2>

<p>Running <code>ifconfig</code> on nfs1 should give you something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>eth0      Link encap:Ethernet  HWaddr 52:54:00:84:73:BD  
</span><span class='line'>          inet addr:10.0.0.1  Bcast:10.0.0.255  Mask:255.255.255.0
</span><span class='line'>          inet6 addr: fe80::5054:ff:fe84:73bd/64 Scope:Link
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:881922 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:1302012 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:239440621 (228.3 MiB)  TX bytes:5791818459 (5.3 GiB)
</span><span class='line'>
</span><span class='line'>eth0:0    Link encap:Ethernet  HWaddr 52:54:00:84:73:BD  
</span><span class='line'>          inet addr:10.0.0.100  Bcast:10.0.0.255  Mask:255.255.255.0
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>
</span><span class='line'>lo        Link encap:Local Loopback  
</span><span class='line'>          inet addr:127.0.0.1  Mask:255.0.0.0
</span><span class='line'>          inet6 addr: ::1/128 Scope:Host
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:16436  Metric:1
</span><span class='line'>          RX packets:2 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:2 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:224 (224.0 b)  TX bytes:224 (224.0 b)</span></code></pre></td></tr></table></div></figure>


<p>Note an entry for <em>eth0:0</em> has miraculously appeared.</p>

<p>Also <code>df</code> should include the entry:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/dev/drbd0             20G  172M   19G   1% /drbd</span></code></pre></td></tr></table></div></figure>


<p>Reboot nfs1 and the services should appear on nfs2.</p>

<p>Connect an NFS client to you floating address (10.0.0.100) and you should be able to kill the live node and it will carry on.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Music Player Daemon in Fedora]]></title>
    <link href="http://www.chriscowley.me.uk/blog/2012/03/16/music-player-daemon-in-fedora/"/>
    <updated>2012-03-16T22:04:00+01:00</updated>
    <id>http://www.chriscowley.me.uk/blog/2012/03/16/music-player-daemon-in-fedora</id>
    <content type="html"><![CDATA[<p>This should have nice and simple, but there was a little gotcha (for me anyway).</p>

<p>First install the RPMFusion repositories:</p>

<!-- more -->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum localinstall --nogpgcheck \
</span><span class='line'>    http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm \
</span><span class='line'>    http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm</span></code></pre></td></tr></table></div></figure>


<p>Now you can install MPD and a simple client with</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install mpd mpc</span></code></pre></td></tr></table></div></figure>


<p>By default it looks in <em>/var/lib/mpd/music</em> which strikes me as reasonable, so copy some music there. Now comes the bit that caught me out; you will need to update is library:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mpc update</span></code></pre></td></tr></table></div></figure>


<p>A lot of documentation on the net talks about running <code>mpd –create-db</code>, but this is now depreciated. I eventually found this out on Arch Linux’s wiki.</p>

<p>Connect a client and listen to your music – I’m using gmpc (<code>yum install gmpc</code>) which is very feature rich, but if you want something simpler, try Sonata (<code>yum install sonata</code>) or even <em>mpc</em> itself. Finally you can also use you MPDroid on your phone.</p>
]]></content>
  </entry>
  
</feed>
